% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GTExdownload.R
\name{xQTLdownload_exp}
\alias{xQTLdownload_exp}
\title{xQTLdownload_exp}
\usage{
xQTLdownload_exp(
  genes = "",
  geneType = "auto",
  tissueSiteDetail = "Liver",
  datasetId = "gtex_v8",
  toSummarizedExperiment = TRUE,
  recordPerChunk = 150,
  pathologyNotesCategories = FALSE
)
}
\arguments{
\item{genes}{Following gene types are supported:
\itemize{
\item \strong{Gene symbol}.

A character string or a character vector (case ignored). like: "tp53","naDK","SDF4".
\item \strong{Gencode/ensemble id} (versioned or unversioned).
}}

\item{geneType}{A character string. Types of queried genes. Options: "auto" (default), "geneSymbol" and "gencodeId";}

\item{tissueSiteDetail}{All tissues' name can be listed with \"tissueSiteDetailGTExv8\" or \"tissueSiteDetailGTExv7\"}

\item{datasetId}{A character string. Options: "gtex_v8" (default), "gtex_v7".}

\item{toSummarizedExperiment}{whether to return a data.frame or a summarizedExperiment object. Default: TRUE, return a toSummarizedExperiment object.}

\item{recordPerChunk}{A integer value (1-2000). number of records fetched per request (default: 150).}

\item{pathologyNotesCategories}{Default: pathologyNotes info is ignored.}
}
\value{
return a SummarizedExperiment or data.frame object harbing gene expression profiles.
}
\description{
download normalized gene expression at the sample level in a specified tissue.
}
\examples{
\donttest{
  # Download gene expression with a genecode ID:
  expProfiles <- xQTLdownload_exp(c("ENSG00000210195.2"),
                                 tissueSiteDetail="Liver")
  # extract expression profile from SummarizedExperiment object:
  SummarizedExperiment::assay(expProfiles)
  # extract samples' detail from SummarizedExperiment object:
  SummarizedExperiment::colData(expProfiles)

  # Download gene expression profiles of multiple genes:
  expProfiles <- xQTLdownload_exp(c("tp53","naDK","SDF4"),
                                 tissueSiteDetail="Artery - Coronary",
                                 pathologyNotesCategories=TRUE,
                                 toSummarizedExperiment=FALSE)
  expProfiles <- xQTLdownload_exp(c("tp53","naDK","SDF4"),
                                 tissueSiteDetail="Artery - Coronary",
                                 datasetId="gtex_v7")

  # Get proteing-coding genes' expression:
  proT <- xQTLquery_gene (genes="protein coding")
  proTexp <- xQTLdownload_exp(proT$geneSymbol[1:100], tissueSiteDetail="Lung",
                              toSummarizedExperiment=FALSE)
  }
}
